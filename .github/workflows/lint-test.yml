name: Frontend CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  security-events: write
  actions: read

env:
  NODE_VERSION: '20'

jobs:
  lint-and-test:
    name: 🎨 Lint & Test
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm install

      - name: 🔍 Run Linter
        run: npm run lint

      - name: 🧪 Run Tests
        run: npm run test -- --coverage
        
      - name: 🔨 Run Build
        run: npm run build

  docker-lint:
    name: 🐳 Docker Lint
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔍 Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ./Dockerfile
          format: sarif
          output-file: hadolint-results.sarif

      - name: 📋 Upload Hadolint Results
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: hadolint-results.sarif

  summary:
    name: 📊 CI Summary
    runs-on: ubuntu-latest
    needs: [lint-and-test, docker-lint]
    if: always()
    steps:
      - name: 📊 Generate Summary
        run: |
          echo "## 🎯 CI/CD Pipeline Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Job                 | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|---------------------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| 🎨 Lint & Test      | ${{ needs.lint-and-test.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 🐳 Docker Lint      | ${{ needs.docker-lint.result == 'success' && '✅ Passed' || '⚠️ Issues Found' }} |" >> $GITHUB_STEP_SUMMARY
